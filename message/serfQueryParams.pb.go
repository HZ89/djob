// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message/serfQueryParams.proto

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type JobQueryParams struct {
	Name           string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Region         string `protobuf:"bytes,2,opt,name=Region" json:"Region,omitempty"`
	SourceNodeName string `protobuf:"bytes,3,opt,name=SourceNodeName" json:"SourceNodeName,omitempty"`
	DistNodeName   string `protobuf:"bytes,4,opt,name=DistNodeName" json:"DistNodeName,omitempty"`
}

func (m *JobQueryParams) Reset()                    { *m = JobQueryParams{} }
func (m *JobQueryParams) String() string            { return proto.CompactTextString(m) }
func (*JobQueryParams) ProtoMessage()               {}
func (*JobQueryParams) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *JobQueryParams) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobQueryParams) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *JobQueryParams) GetSourceNodeName() string {
	if m != nil {
		return m.SourceNodeName
	}
	return ""
}

func (m *JobQueryParams) GetDistNodeName() string {
	if m != nil {
		return m.DistNodeName
	}
	return ""
}

type GetRPCConfigResp struct {
	Ip   string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
}

func (m *GetRPCConfigResp) Reset()                    { *m = GetRPCConfigResp{} }
func (m *GetRPCConfigResp) String() string            { return proto.CompactTextString(m) }
func (*GetRPCConfigResp) ProtoMessage()               {}
func (*GetRPCConfigResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetRPCConfigResp) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *GetRPCConfigResp) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type JobCountResp struct {
	Name  string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=Count" json:"Count,omitempty"`
}

func (m *JobCountResp) Reset()                    { *m = JobCountResp{} }
func (m *JobCountResp) String() string            { return proto.CompactTextString(m) }
func (*JobCountResp) ProtoMessage()               {}
func (*JobCountResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *JobCountResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobCountResp) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type QueryResult struct {
	Status  int32  `protobuf:"varint,1,opt,name=Status" json:"Status,omitempty"`
	Node    string `protobuf:"bytes,2,opt,name=Node" json:"Node,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=Message" json:"Message,omitempty"`
}

func (m *QueryResult) Reset()                    { *m = QueryResult{} }
func (m *QueryResult) String() string            { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()               {}
func (*QueryResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *QueryResult) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *QueryResult) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *QueryResult) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type QueryJobRunParams struct {
	Execution *Execution `protobuf:"bytes,1,opt,name=Execution" json:"Execution,omitempty"`
	Exp       string     `protobuf:"bytes,2,opt,name=exp" json:"exp,omitempty"`
}

func (m *QueryJobRunParams) Reset()                    { *m = QueryJobRunParams{} }
func (m *QueryJobRunParams) String() string            { return proto.CompactTextString(m) }
func (*QueryJobRunParams) ProtoMessage()               {}
func (*QueryJobRunParams) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *QueryJobRunParams) GetExecution() *Execution {
	if m != nil {
		return m.Execution
	}
	return nil
}

func (m *QueryJobRunParams) GetExp() string {
	if m != nil {
		return m.Exp
	}
	return ""
}

func init() {
	proto.RegisterType((*JobQueryParams)(nil), "message.JobQueryParams")
	proto.RegisterType((*GetRPCConfigResp)(nil), "message.GetRPCConfigResp")
	proto.RegisterType((*JobCountResp)(nil), "message.JobCountResp")
	proto.RegisterType((*QueryResult)(nil), "message.QueryResult")
	proto.RegisterType((*QueryJobRunParams)(nil), "message.QueryJobRunParams")
}

func init() { proto.RegisterFile("message/serfQueryParams.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x5b, 0x4b, 0xf3, 0x40,
	0x10, 0xa5, 0x77, 0x3a, 0x2d, 0xa5, 0x5d, 0x3e, 0x3e, 0x8a, 0x20, 0xc8, 0x3e, 0x88, 0x4f, 0x51,
	0x14, 0xc4, 0xf7, 0x28, 0x42, 0xc0, 0x52, 0x37, 0x0f, 0x3e, 0x27, 0xed, 0x34, 0x44, 0x4c, 0x66,
	0xd9, 0x0b, 0xd4, 0x7f, 0xe0, 0xcf, 0x96, 0x4c, 0xb6, 0xf5, 0x82, 0x6f, 0x33, 0x73, 0xce, 0x99,
	0x3d, 0x67, 0x16, 0x4e, 0x2b, 0xb4, 0x36, 0x2b, 0xf0, 0xd2, 0xa2, 0xd9, 0x3d, 0x7b, 0x34, 0xef,
	0xeb, 0xcc, 0x64, 0x95, 0x8d, 0xb4, 0x21, 0x47, 0x62, 0x14, 0xe0, 0x93, 0xc5, 0x81, 0xf7, 0x4a,
	0x79, 0x8b, 0xc9, 0x8f, 0x0e, 0xcc, 0x12, 0xca, 0xbf, 0x89, 0x84, 0x80, 0xfe, 0x2a, 0xab, 0x70,
	0xd9, 0x39, 0xeb, 0x5c, 0x8c, 0x15, 0xd7, 0xe2, 0x3f, 0x0c, 0x15, 0x16, 0x25, 0xd5, 0xcb, 0x2e,
	0x4f, 0x43, 0x27, 0xce, 0x61, 0x96, 0x92, 0x37, 0x1b, 0x5c, 0xd1, 0x16, 0x59, 0xd5, 0x63, 0xfc,
	0xd7, 0x54, 0x48, 0x98, 0xde, 0x97, 0xd6, 0x1d, 0x59, 0x7d, 0x66, 0xfd, 0x98, 0xc9, 0x5b, 0x98,
	0x3f, 0xa2, 0x53, 0xeb, 0x38, 0xa6, 0x7a, 0x57, 0x16, 0x0a, 0xad, 0x16, 0x33, 0xe8, 0x96, 0x3a,
	0x38, 0xe9, 0x96, 0xba, 0xf1, 0xa6, 0xc9, 0x38, 0x76, 0x31, 0x50, 0x5c, 0xcb, 0x3b, 0x98, 0x26,
	0x94, 0xc7, 0xe4, 0x6b, 0xc7, 0x9a, 0xbf, 0xfc, 0xff, 0x83, 0x01, 0x13, 0x58, 0xd8, 0x53, 0x6d,
	0x23, 0x53, 0x98, 0x70, 0x70, 0x85, 0xd6, 0xbf, 0xb9, 0x26, 0x64, 0xea, 0x32, 0xe7, 0x2d, 0x4b,
	0x07, 0x2a, 0x74, 0xbc, 0x90, 0xb6, 0x18, 0xa2, 0x73, 0x2d, 0x96, 0x30, 0x7a, 0x6a, 0x8f, 0x19,
	0x12, 0x1f, 0x5a, 0xf9, 0x02, 0x0b, 0x5e, 0x9a, 0x50, 0xae, 0x7c, 0x1d, 0x6e, 0x7a, 0x05, 0xe3,
	0x87, 0x3d, 0x6e, 0xbc, 0x6b, 0x4e, 0xd8, 0x6c, 0x9f, 0x5c, 0x8b, 0x28, 0xfc, 0x46, 0x74, 0x44,
	0xd4, 0x17, 0x49, 0xcc, 0xa1, 0x87, 0x7b, 0x1d, 0xde, 0x6c, 0xca, 0x7c, 0xc8, 0x3f, 0x76, 0xf3,
	0x19, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x6e, 0x53, 0x39, 0xee, 0x01, 0x00, 0x00,
}

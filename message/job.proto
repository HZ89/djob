syntax = "proto3";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

package message;
service job {
    rpc GetJob (Job) returns (Job) {
    }
    rpc ExecDone (Execution) returns (google.protobuf.Empty) {
    }
    rpc DoOps (Params) returns (Result) {
    }
}

enum Ops {
    READ = 0;
    ADD = 1;
    MODIFY = 2;
    DELETE = 3;
}

message Search {
    repeated string Conditions = 1;
    repeated string Links = 2;
    int32 PageNum = 3;
    int32 PageSize = 4;
    bool Count = 5;
}

message Params {
    google.protobuf.Any Obj = 1;
    Ops Ops = 2;
    Search Search = 3;
}

message Result {
    bool Succeed = 1;
    int32 MaxPageNum = 2;
    repeated google.protobuf.Any Objs = 3;
}

message Job {
    // @inject_tag: form:"Name" gorm:"type:varchar(64);not null;unique_index:n_g_idx"
    string Name = 1; // Job name. Must be unique in one region
    // @inject_tag: form:"Region" gorm:"type:varchar(64);not null;unique_index:n_g_idx"
    string Region = 2; // Job run in this region normally.
    // @inject_tag: gorm:"type:varchar(64)"
    string Schedule = 3;
    // @inject_tag: gorm:"type:tinyint(4)"
    bool Shell = 4; // Use shell to run command
    // @inject_tag: gorm:"type:varchar(512);not null"
    string Command = 5; // Command to run
    // @inject_tag: gorm:"type:varchar(64);not null"
    string Expression = 6; // A expression used for filter agent node, job will run in the node when this expression is true
    // @inject_tag: gorm:"type:tinyint(4)"
    bool Idempotent = 7; //
    // @inject_tag: gorm:"type:tinyint(4)"
    bool Disable = 8; // if true, job don't run
    // @inject_tag: gorm:"type:varchar(64); not null"
    string SchedulerNodeName = 9; // which node schedule this job
    // @inject_tag: gorm:"type:bigint(21);not null;primary_key"
    int64 Id = 10; // UUID of this Job
    // @inject_tag: gorm:"ForeignKey:Id"
    Job ParentJob = 11;
}

message JobStatus {
    // @inject_tag: form:"Name"
    string Name = 1;
    // @inject_tag: form:"Region"
    string Region = 2;
    int64 SuccessCount = 3; // Number of successful executions of this job
    int64 ErrorCount = 4; // Number of errors of this job
    string LastHandleAgent = 5; // The agent node name which exec the job last time
    string LastSuccess = 6; // Last time this jon executed successful in rfc 3339
    string LastError = 7; // Last time this job failed
}

message Execution {
    // @inject_tag: gorm:"type:varchar(64);not null"
    string SchedulerNodeName = 1;
    // @inject_tag: gorm:"type:blob"
    bytes Output = 2;
    // @inject_tag: gorm:"type:tinyint(4)"
    bool Succeed = 3;
    // @inject_tag: gorm:"type:bigint(21);not null"
    int64 StartTime = 4;
    // @inject_tag: gorm:"type:bigint(21);not null"
    int64 FinishTime = 5;
    // @inject_tag: gorm:"type:varchar(64);primary_key;not null" form:"Name"
    string Name = 6;
    // @inject_tag: gorm:"type:varchar(64);primary_key;not null" form:"Rgion"
    string Region = 7; // The region of job
    // @inject_tag: gorm:"type:int(11);not null"
    int64 Retries = 8; // Number of times to retry a execution
    // @inject_tag: gorm:"type:bigint(21);primary_key;not null" form:"Group"
    int64 Group = 9;
    // @inject_tag: gorm:"type:varchar(64);primary_key;not null" form:"NodeName"
    string RunNodeName = 10;
}
